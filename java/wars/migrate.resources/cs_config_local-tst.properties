#-Pcs_config=java/wars/migrate.resources/cs_config_local-tst.properties :java/wars:migrate.resources:war

# cdn configuration values, used to form both legacy cdn urls for migration source, as well as for
# forming S3 ObjectId paths for migration destination
limelightThumbnailContext  =thumbnail
limelightPosterFrameContext=posterframe
limelightFlashContext      =flash
limelightImageContext      =image
limelightVideoContext      =video
limelightUnsecurePath      =u
limelightSecurePath        =s
limelightMediaVaultSecret  =jkOP42jU24fIc
limelightHttpUrlBase       =http://sgraphics.vo.llnwd.net/o43
limelightMultibitratePath  =mb
# this property will not actually be used in a local migration
limelightEnvDirectory      =dev-gary

# fall-back for content downloads in a remote migration
labyrinthHttpUrlBase       =http://localhost:8080

# local migrations: local content cache configuration
labyrinthWebCacheRoot      =/sgDev/NewVictory
labyrinthImageCache        =image_cache
labyrinthFlashCache        =flash_cache
labyrinthVideoCache        =video_cache
labyrinthThumbnailCache    =thumbnail_cache
labyrinthPosterFrameCache  =posterFrame_cache

# dynamodb table for reporting errors
labyrinthErrorTrackTable   =cs-cloud-dev-greg--migrate-resources-errors

# download bucket - destination for migrated files
labyrinthS3bucket          =cs-cloud-dev-greg--download

# tomcat context to use when deploying to a remote tomcat server (not used in local migration)
csDeployContextPath        =/migrateResources


# dry-run only (do not upload to S3)
processor.dryRunOnly=true

# configures the remote partitioner if being used in a deployed server migration
# (local migrations do not use these parameters, so ignore them)
remotePartitionWebserviceUrl=http://localhost:8082/api
remotePartitionWebserviceTimeout=5000


# only use local filesystem? (i.e. do not download source files from cdn)
processor.useLocalFileSystem=true


# set this to true if you want to clear the partitioner table
# on startup, which is necessary if you want to re-process all data,
# for example after a dry-run
slideResource.partitioner.reset=true
slideThumbnail.partitioner.reset=true


slideResource.thread.pool.size=5
slideThumbnail.thread.pool.size=5

executor.item.threads           =5
executor.version.threads        =5

slideResource.batchSize         =15
slideThumbnail.batchSize        =15

# delay in milliseconds between adding new events to inbound-channel-adapter, default is 5 seconds
triggerFixedDelay          =5000


# check S3 before processing file?
processor.checkS3Exists=false


# autostartup is applied each inbound-channel-adapter in root-context.xml,
# and controls whether they start automatically (true), or manually by
# starting them from the /status controller
slideResource.autostartup=false
slideThumbnail.autostartup=false

# second set of inbound-channel-adapters, only used when running a 2nd pass migration,
# which is only necessary if you ran once, then uploaded more content without cs-cloud integration
updatedSlideResource.autostartup=false
updatedSlideThumbnail.autostartup=false


# range of slideResource.id values to process, default is (0, -1) which processes entire range dynamically
slideResource.startId=0
slideResource.endId=-1

slideThumbnail.startId=0
slideThumbnail.endId=-1


# used for updatedSlides processor
slideThumbnail.minimumModifiedDate=2016-11-11

# local database server connection string
nvJdbcUrl                      =jdbc:mysql://127.0.0.1:3306/Magnet

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
loggerRootLevel=info
loggerRootAppenderRef=CONSOLE

loggerAwsLevel=info
loggerAwsAppenderRef=CONSOLE
loggerCustomShowLevel=debug
loggerCustomShowAppenderRef=CONSOLE
loggerSpringLevel=info
loggerSpringAppenderRef=CONSOLE
loggerSpringIntegrationLevel=info
loggerSpringIntegrationAppenderRef=CONSOLE
loggerSpringDataElasticsearchLevel=info
loggerSpringDataElasticsearchAppenderRef=CONSOLE

logMailFrom=gary@cs.cc
logMailTo=gary@cs.cc
