<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:utils="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy"
       xmlns:int-redis="http://www.springframework.org/schema/integration/redis"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

            http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
            http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy.xsd
            http://www.springframework.org/schema/integration/redis http://www.springframework.org/schema/integration/redis/spring-integration-redis.xsd
            http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd ">

    <context:property-placeholder/>

    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${ecsRedisDomainName}" p:port="6379"/>
    <bean p:connectionFactory-ref="redisConnectionFactory" id="redisTemplate"
          class="org.springframework.data.redis.core.StringRedisTemplate"/>
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${ecsMySqlDomainName}/Magnet"/>
        <property name="username" value="${ecsMySQLUser}"/>
        <property name="password" value="${ecsMySQLPass}"/>
    </bean>

    <bean id="nvJdbcTemplate" name="newVictoryMySQL" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>

    <bean id="txManager" class="org.springframework.integration.transaction.PseudoTransactionManager"/>
    <int:poller default="true" fixed-delay="${queryPollingFixDelay}" max-messages-per-poll="1">
        <int:transactional transaction-manager="txManager" synchronization-factory="txSyncFactory"/>
    </int:poller>

    <int:transaction-synchronization-factory id="txSyncFactory">
        <int:after-commit channel="updateTimeAfterCommit"/>
    </int:transaction-synchronization-factory>

    <int:channel id="updateTimeAfterCommit"/>
    <int:outbound-channel-adapter channel="updateTimeAfterCommit" ref="javaCode" method="updateTimeAfterCommit"/>

    <bean id="javaCode" class="org.pubanatomy.search.query.JavaCode">
        <constructor-arg value="${dateFormatPattern}"/>
        <constructor-arg value="${searchIndexingRedisQueue}"/>
        <constructor-arg value="${searchIndexingRedisQueueSizeLimit}"/>
    </bean>

    <int-jdbc:inbound-channel-adapter query="${listDeletedRes_sql}" max-rows-per-poll="${listDeletedResMaxRowsPerPoll}"
                                      channel="fromSQL" data-source="dataSource"
                                      auto-startup="${indexFolderRecursively}"
                                      select-sql-parameter-source="parameterSource"/>

    <int-jdbc:inbound-channel-adapter query="${listChangedRes_sql}" max-rows-per-poll="0"
                                      channel="fromSQL" data-source="dataSource"
                                      select-sql-parameter-source="parameterSource"/>

    <int-jdbc:inbound-channel-adapter query="${listChangedFolder_sql}" max-rows-per-poll="0"
                                      channel="fromSQL" data-source="dataSource"
                                      select-sql-parameter-source="parameterSource"/>

    <int-jdbc:inbound-channel-adapter query="${listDeletedFolder_sql}"
                                      max-rows-per-poll="${listDeletedFolderMaxRowsPerPoll}"
                                      channel="fromSQL" data-source="dataSource"
                                      auto-startup="${indexFolderRecursively}"
                                      select-sql-parameter-source="parameterSource"/>

    <bean id="parameterSource" factory-bean="parameterSourceFactory" factory-method="createParameterSourceNoCache">
        <constructor-arg ref="javaCode"/>
    </bean>

    <bean id="parameterSourceFactory"
          class="org.springframework.integration.jdbc.ExpressionEvaluatingSqlParameterSourceFactory">
        <property name="parameterExpressions">
            <utils:map>
                <entry key="listDeletedResTime" value="getTimeFromRedis( 'listDeletedResTime' )"/>
                <entry key="listChangedResTime" value="getTimeFromRedis( 'listChangedResTime' )"/>
                <entry key="listChangedFolderTime" value="getTimeFromRedis( 'listChangedFolderTime' )"/>
                <entry key="listDeletedFolderTime" value="getTimeFromRedis( 'listDeletedFolderTime' )"/>
            </utils:map>
        </property>
    </bean>

    <int:filter input-channel="fromSQL" output-channel="fromSQLNotNull" expression="payload!=null"/>
    <int:transformer input-channel="fromSQLNotNull" output-channel="outToQueueStr" ref="javaCode"
                     method="outToRedisQueue"/>

    <bean class="com.fasterxml.jackson.databind.ObjectMapper" id="objectMapper"/>

    <int:channel id="outToQueueStr"/>
    <int-redis:queue-outbound-channel-adapter id="outboundAdapter" channel="outToQueueStr"
                                              queue="${searchIndexingRedisQueue}" serializer="stringRedisSerializer"/>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
</beans>
