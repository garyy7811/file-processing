<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/integration
       http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/data/elasticsearch
       http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch.xsd">

    <context:property-placeholder location="classpath:test-config.properties"/>

    <context:annotation-config/>


    <bean id="awsCredentials" class="com.amazonaws.auth.AWSStaticCredentialsProvider">
        <constructor-arg>
            <bean class="com.amazonaws.auth.BasicAWSCredentials">
                <constructor-arg value="${build_aws_access_key_id}"/>
                <constructor-arg value="${build_aws_secret_access_key}"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="dynamoDBClient" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient">
        <constructor-arg ref="awsCredentials"/>
        <property name="endpoint" value="${uniTestAwsDynamoDbEndpoint}"/>
    </bean>




    <!--
    <elasticsearch:transport-client id="client" client-transport-sniff="false"
                                    cluster-name="elasticsearch" cluster-nodes="${dynamo2esElasticsearchUrl}"/>
-->
    <elasticsearch:node-client id="client" local="true" cluster-name="#{T(java.util.UUID).randomUUID().toString()}"
                               http-enabled="false" path-data="build/elasticsearchTestData" path-home="src/test/resources/test-home-dir"/>


    <bean id="elasticsearchTemplate"
          class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
        <constructor-arg name="client" ref="client"/>
    </bean>


    <bean class="org.pubanatomy.awsutils.DynamoElasticSearch" id="de">
        <constructor-arg>
            <util:map>
                <entry key="${awsLoginVerificationDynamoTablename}"
                       value="#{T(org.pubanatomy.loginverify.DynaLogInSessionInfo)}"/>
                <entry key="${awsS3UploadDynamoTablename}"
                       value="#{T(org.pubanatomy.awsS3Upload.DynaTableAwsS3Upload)}"/>
                <entry key="${awsConfigPerClientDynamoTablename}"
                       value="#{T(org.pubanatomy.configPerClient.DynaTableClientConfig)}"/>
                <entry key="${awsTranscodingDynamoTablename}"
                       value="#{T(org.pubanatomy.videotranscoding.DynaTableVideoTranscoding)}"/>
                <entry key="${awsS3DownloadDynamoTablename}"
                       value="#{T(org.pubanatomy.awsS3Download.DynaTableNVResource)}"/>
                <entry key="${awsS3IndexDynamoTablename}"
                       value="#{T(org.pubanatomy.awsutils.S3ObjectDetails)}"/>
                <entry key="${awsMigrateResourceErrorsTableName}"
                       value="#{T(org.pubanatomy.migrationutils.MigrationErrorRecord)}"/>
            </util:map>
        </constructor-arg>
        <constructor-arg value="${elasticsearchIndexNameFromDynamoDB}"/>
    </bean>

    <bean class="org.pubanatomy.configPerClient.ConfigPerClientDAO">
        <constructor-arg value="${awsConfigPerClientDynamoTablename}"/>
    </bean>

    <bean class="org.pubanatomy.videotranscoding.TranscodingReportingService">
        <constructor-arg value="#{de.indexName}"/>
    </bean>

</beans>
